<!DOCTYPE html>
<html lang="en">
  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="chrome=1">
  <title>KK.</title>
  <link href="favicon.ico" type="image/x-icon" rel="shortcut icon">
  <link crossorigin="anonymous" integrity="sha384-9Z9AuAj0Xi0z7WFOSgjjow8EnNY9wPNp925TVLlAyWhvZPsf5Ks23Ex0mxIrWJzJ"
    href="https://s2.ssl.qhres2.com/baomitu/normalize/8.0.1/normalize.min.css" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
  <%- include('../assets') %>
  <style type="text/css">
    .subunit.CHN { fill: #e6e6e6; }
    .subunit.HKG { fill: #cdcdcd; }
    .subunit.TWN { fill: #dbdbdb; }
    .subunit.MAC { fill: #bfbfbf; }
    .subunit-boundary {
      fill: none;
      stroke: #777;
      stroke-dasharray: 2, 2;
      stroke-linejoin: round;
    }
    .place-boundary {
      fill: none;
      stroke: #777;
      stroke-dasharray: 2, 2;
      stroke-linejoin: round;
    }
    .subunit-label {
      fill: #777;
      fill-opacity: .5;
      font-size: 20px;
      font-weight: 300;
      text-anchor: middle;
    }
    .place,
    .place-label {
      fill: #444;
    }
    text {
      font-size: 10px;
      pointer-events: none;
    }
    .wrap {
      display: flex;
    }
    .canvas {
      width: 850px;
      height: 650px;
    }
    .content {
      margin-top: 100px;
      width: 400px;
    }
    .content p {
      line-height: 1.5;
    }
    .site {
      margin: 50px 0;
    }
    </style>
  </head>
  <body>
    <div class="wrap">
      <div class="canvas"></div>
      <div class="content">
        <%- include('../home/header') %>
        <div class="site">
          <p>开始想着记录下足迹 👣 <sub>2023-05-12 14:01</sub> 。也不知道会有什么用处，大概就是一种类似“当我老了之后，有一天血血来潮想看看自己都去过哪里，又预防老年记忆不好，提前笔记”的意思吧。</p>
          <p>也希望通过这张地图提醒自己，“世界这么大”不去多走走多看看太可惜了。但实际上其实很难有机会去很多地方吧，网络词汇怎么说的来着，理想很好但现实不是太够丰满，想要远方和诗，总是要拥有前置条件的。</p>
        </div>
        <%- include('../home/footer') %>
      </div>
    </div>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://lib.baomitu.com/topojson/3.0.2/topojson.min.js"></script>
    <script type="text/javascript">
      const width = 850;
      const height = 650;
  
      const projection = d3.geoAlbers()
        .center([0, 36])
        .rotate([-105, 0])
        .parallels([27, 45])
        .scale(850)
        .translate([width / 2, height / 2]);
  
      const path = d3.geoPath()
        .projection(projection)
        .pointRadius(2);
  
      const svg = d3.select(".canvas").append("svg")
        .attr("width", width)
        .attr("height", height);
  
      const GEONAMESIDs = [];
      const NE_IDs = [];
      // 哈尔滨/北京/福州/天津/青岛/杭州/沈阳
      const WOF_IDs = [102027921, 102027745, 102027611, 102027107, 102027571, 102027241, 102027875];
  
          // geo.path geoPath
      d3.json("../map/cn.json").then(function(data, error) {
        const subunits = topojson.feature(data, data.objects.subunits);
        const places = topojson.feature(data, data.objects.places);
        const placePoints = {...places, features: places.features.filter(_ => (
          GEONAMESIDs.includes(_.properties.GEONAMESID) || 
          NE_IDs.includes(_.properties.NE_ID) || 
          WOF_IDs.includes(_.properties.WOF_ID)
        ))}
  
        // 根据 geojson 描绘地图轮廓
        svg.append("path")
          .datum(subunits)
          .attr("d", path);
  
        // 依据 ADM0_A3 划分区域并上色
        svg.selectAll(".subunit")
          .data(subunits.features)
          .enter()
          .append("path")
          .attr("class", d => "subunit " + d.properties.ADM0_A3)
          .attr("d", path);
  
        // 对区域进行虚线描边
        // topojson.mesh 从拓扑计算边界
        svg.append("path")
          .datum(topojson.mesh(data, data.objects.subunits, (a, b) => a.properties.ADM0_A3 !== "MAC"))
          .attr("d", path)
          .attr("class", (_d, i) => "subunit-boundary subunit-boundary" + i);
        
        // 添加区域标题
        // svg.selectAll(".subunit-label")
        //   .data(subunits.features)
        //   .enter()
        //   .append("text")
        //   .attr("class", d => "subunit-label subunit-label" + d.properties.NAME_ZH)
        //   .attr("transform", d => "translate(" + path.centroid(d) + ")")
        //   .attr("dy", ".35em")
        //   .text(d => d.properties.NAME_ZH);
  
        // 计算地点
        svg.append("path")
          .datum(placePoints)
          .attr("d", path)
          .attr("class", "place");
  
        // 计算地方文字
        svg.selectAll(".place-label")
          .data(placePoints.features)
          .enter()
          .append("text")
          .attr("class", "place-label")
          .attr("transform", d => "translate(" + projection(d.geometry.coordinates) + ")")
          .attr("x", d => d.geometry.coordinates[0] > -1 ? 6 : -6)
          .attr("dy", ".35em")
          .text(d => d.properties.NAME_ZH);
      });
    </script>
  </body>
</html>

 
